name: Actions OpenWrt Docker Images

on:
  workflow_dispatch:

jobs:
  RootFS-Images:
    name: Build  Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 qemu-utils genisoimage

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Image Builder
        run: |
          wget -q https://downloads.immortalwrt.org/releases/23.05.4/targets/x86/64/immortalwrt-imagebuilder-23.05.4-x86-64.Linux-x86_64.tar.xz

      - name: Set Image Builder
        run: |
          tar -xJf *.tar.xz
          cd immortalwrt-imagebuilder-23.05.4-x86-64.Linux-x86_64
          cp -rf $GITHUB_WORKSPACE/files .
          chmod +x files/etc/rc.local

      - name: Build RootFS (amd64)
        run: |
          cd immortalwrt-imagebuilder-23.05.4-x86-64.Linux-x86_64
          chmod +x $GITHUB_WORKSPACE/scripts/*
          $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          export CONFIG_PACKAGES=$(cat $GITHUB_WORKSPACE/config/packages.config | tr -s "\n" " ")
          make image PACKAGES="$CONFIG_PACKAGES" FILES="files"
          cp -rf bin/targets/x86/64/*rootfs.tar.gz $GITHUB_WORKSPACE

      - name: Upload Image
        uses: actions/upload-artifact@v3
        with:
          name: rootfs
          path: "*rootfs.tar.gz"
